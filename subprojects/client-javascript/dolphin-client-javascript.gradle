// To produce '${buildDir}/opendolphin.js' from the typescript files underneath 'js/dolphin' do the following:
//
// Running "install" will compile all typescript files into a single js file and will update
// the artefacts in the example grails server installation.
//
// You can also run the tasks compileTypeScript, jsZip, and updateGrailsJs in isolation.

// This build file requires a nodejs and tsc installation.
//
// To produce a webjar containing opendolphin.js:
// Call:
//   ../../gradlew jar
// which will result in: build/libs/opendolphinjs-${version}.jar,
// which can be installed to the local maven repository (~/.m2) by calling
//   ../../gradlew -i publishToMavenLocal
// To be able to upload it to bintray you need to be a member of the bintray-opendolphin organisation.
// Then invoke:
//   ../../gradlew -i bintrayUpload
// and confirm the publishing notification on the bintray website.
//

buildscript {
    repositories {
        jcenter()
        mavenCentral()
		maven {
			url 'https://github.com/sothmann/typescript-gradle-plugin/raw/mavenrepo/'
		}
    }
    dependencies {
		classpath 'de.richsource.gradle.plugins:typescript-gradle-plugin:1.0.6'
    }
}

plugins {
    id "com.jfrog.bintray" version "1.0"
}

apply plugin: 'typescript'

// used to produce webjar:
apply plugin: 'java'
apply plugin: 'maven-publish'

task updateGrailsJs << {
    ant.delete dir: '../../dolphin-grails/web-app/js/dolphin'
    // copy single ts and js files for use with ts examples
    copy {
        from 'js'
        into '../../dolphin-grails/web-app/js'
    }
    // copying libs is currently not needed since we do not rely on anything atm
//    copy {
//        from 'libs'
//        into '../../dolphin-grails/web-app/libs'
//    }
    copy {
        from "${buildDir}/opendolphin.js"
        into '../../dolphin-grails/web-app/dolphin'
    }
}

task jsZip (type: Zip) {
    archiveName    = 'opendolphin.js.zip'
    destinationDir = buildDir
    from '.', {
        include 'js/**'
//        include 'libs/**' // not needed since we do not rely on anything atm
    }
}

compileTypeScript {
	source = 'js/dolphin'
	outputDir = file('js/dolphin')
	module = 'amd'
	sourcemap = true
	out = file('build/opendolphin.js')
}

task install (dependsOn: [compileTypeScript, jsZip, updateGrailsJs])

// ------------- Create webjar for OpenDolphinJS: --------------------
jar {
    dependsOn compileTypeScript
    from(fileTree(dir: "${projectDir}/build", includes: ['*.js', '*.js.map'])) {
        into "META-INF/resources/webjars/org/opendolphin/${version}"
    }
    baseName = 'opendolphinjs'
    outputs.file archivePath
}
publishing {
    publications {
        mavenJavascript(MavenPublication) {
            artifact jar {
            }
        }
    }
}

// Please configure your personal bintray credentials via 'bintrayUser' and 'bintrayKey' in '~/.gradle/gradle.properties' to
// be able execute the following task:
bintray {
    dryRun = false
    user = project.hasProperty('bintrayUser') ? bintrayUser : '-'
    key = project.hasProperty('bintrayKey') ? bintrayKey : '-'
    publications = ['mavenJavascript']
    pkg {
        userOrg = 'opendolphin'
        repo = 'mavenrepo'
        name = 'open-dolphin-client-javascript'
        licenses = ['Apache-2.0']
    }
}
// ---------------------------------

